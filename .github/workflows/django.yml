name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint (black & flake8)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Black (check only)
        run: black --check .

      - name: Flake8
        run: flake8 .

  test:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Django needs a SECRET_KEY; tests run with sqlite in workspace
      - name: Set env for Django
        run: |
          echo "DJANGO_SECRET_KEY=test-ci-key" >> $GITHUB_ENV
          echo "DJANGO_SETTINGS_MODULE=mysite.settings" >> $GITHUB_ENV

      - name: Run tests with coverage (pytest)
        run: |
          coverage run -m pytest
          coverage xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ""
          file: coverage.xml

  deploy:
    name: Deploy to Elastic Beanstalk
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install EB CLI
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          # If your prof wants AssumeRole, add:
          # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          # role-session-name: github-actions-eb

      - name: Deploy to EB
        env:
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
        run: |
          # Ensure .elasticbeanstalk/config.yml exists in repo (you have it)
          eb status $EB_ENV_NAME
          eb deploy $EB_ENV_NAME --staged
